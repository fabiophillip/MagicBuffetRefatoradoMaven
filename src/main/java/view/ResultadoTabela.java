/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import InterfaceDAO.DAOComBuscaMultiplaInterface;
import InterfaceDAO.GenericDAOInterface;
import controler.Festa;
import controler.Pessoa;
import controler.Tema;
import entidadesDAO.FabricaDeDAO;

import javax.swing.JOptionPane;

import java.util.ArrayList;

import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andreza
 */
public class ResultadoTabela extends javax.swing.JFrame {

    String tipoPessoa = "";
    private DAOComBuscaMultiplaInterface DAOFestas;
    private GenericDAOInterface DAOPessoas;
    private DAOComBuscaMultiplaInterface DAOTemas;
    
    /**
     * Creates new form ResultadoTodosClientes
     */
    public ResultadoTabela() 
    {
        initComponents();
        DAOFestas = FabricaDeDAO.criarFestaDAO();
        DAOPessoas = FabricaDeDAO.criarPessoaDAO();
        DAOTemas = FabricaDeDAO.criarTemaDAO();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Informacoes = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        Excluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Informacoes.setText("Informacoes");
        Informacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InformacoesActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(504, 504, 504)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(Informacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Informacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InformacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InformacoesActionPerformed
        // TODO add your handling code here:
        if(tipoPessoa.equals("") & tabela.getSelectedRowCount() != 0){  
            mostrarInformacoesDeUmaFesta();            
        }
        else if(tabela.getSelectedRowCount() != 0)
        {         
        	mostrarInformacoesDeUmaPessoa();     
        }
    }//GEN-LAST:event_InformacoesActionPerformed

	private void mostrarInformacoesDeUmaFesta() {
		int linha = tabela.getSelectedRow();
		Object valueAt = tabela.getValueAt(linha, 3);
		String idFesta = valueAt.toString();             
		Festa festaResultadoDaBusca = (Festa) DAOFestas.buscar(idFesta);
		ResultadoFesta resultadoConsultaFesta = new ResultadoFesta(festaResultadoDaBusca);
		    
		    
		    ArrayList<Object> objetosTemasCadastrados = DAOTemas.buscar();
		    ArrayList<Tema> temasCadastrados = new ArrayList<Tema>();
		    
		    for(Object objetoTemaCadastrado : objetosTemasCadastrados)
		        temasCadastrados.add((Tema) objetoTemaCadastrado);
		    
		    String[] temasAMostrarProUsuario = new String[temasCadastrados.size()];
		    String temaSelecionado = festaResultadoDaBusca.getTema();                
		    for (int i = 0; i < temasCadastrados.size(); i++) {
		        if(temasCadastrados.get(i).getTnome().equals(temaSelecionado)) {
		            String aux = temasAMostrarProUsuario[0];                                
		            temasAMostrarProUsuario[0] = temaSelecionado;
		            temasAMostrarProUsuario[i] = aux;                        
		        }
		        
		        temasAMostrarProUsuario[i] = temasCadastrados.get(i).getTnome();
		    }

		    DefaultComboBoxModel  model = new DefaultComboBoxModel(temasAMostrarProUsuario);
		    resultadoConsultaFesta.getItensTema().setModel(model);
		    resultadoConsultaFesta.getItensTema().setEditable(false);
		    resultadoConsultaFesta.getItensTema().setEnabled(false);
		    resultadoConsultaFesta.setVisible(true);
	}

	private void mostrarInformacoesDeUmaPessoa() {
		int linha = tabela.getSelectedRow();
        Object valueAt = tabela.getValueAt(linha, 1);
        String cpf = valueAt.toString(); 
        Pessoa p = (Pessoa) DAOPessoas.buscar(cpf,tipoPessoa);
        Resultado result = new Resultado();
        
        result.setTextoNome(p.getPnome());
        result.setCep(p.getCep());
        result.setCidadee(p.getCidade());
        result.setCpf(p.getCpf());
        result.setBairro(p.getBairro());
        result.setTelefone(p.getTelefone());
        result.setRua(p.getRua());
        result.setNumero(String.valueOf(p.getNumero()));        
        result.setRG(String.valueOf(p.getRg()));
        result.setTipo(tipoPessoa);
        result.getTextoBairro().setEnabled(false);
        result.getTextoNome().setEnabled(false);
        result.getTextoCPF().setEnabled(false);
        result.getTextoCep().setEnabled(false);
        result.getTextoRG().setEnabled(false);
        result.getTextoTelefone().setEnabled(false);
        result.getTextoRua().setEnabled(false);
        result.getNumeroTexto().setEnabled(false);
        result.getTextoCidade().setEnabled(false);        
        this.dispose();
        result.setVisible(true);
	}

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) 
    {//GEN-FIRST:event_ExcluirActionPerformed
        // TODO add your handling code here:
    	if(tabela.getSelectedRowCount() != 0)
    	{
    		 int resposta = JOptionPane.showConfirmDialog( null,"Tem certeza que quer excluir o cliente ou festa do sistema?","Confirmacao", JOptionPane.YES_NO_OPTION);
    	        if(resposta == JOptionPane.YES_OPTION){
    	            int linha = tabela.getSelectedRow();
    	            
    	            if(this.tipoPessoa.compareTo("") != 0)
    	            {
    	            	Object valueAt = tabela.getValueAt(linha, 1);
        	            String cpf = valueAt.toString();
        	           
        	            Pessoa p = (Pessoa) DAOPessoas.buscar(cpf, "CLIENTE");
        	            DAOPessoas.remover(p);
        	            JOptionPane.showMessageDialog(this,"cliente Removido");
    	            }
    	            else
    	            {
    	            	Object valueAt = tabela.getValueAt(linha, 3);
    	            	String id = valueAt.toString();
    	            	
    	            	Festa f = (Festa) DAOFestas.buscar(id);
    	            	DAOFestas.remover(f);
    	            	JOptionPane.showMessageDialog(this,"festa Removida");
    	            }
    	           
    	         
    	            ((DefaultTableModel)this.tabela.getModel()).removeRow(linha);
    	        }       
    	}
    }
   

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultadoTabela().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Informacoes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

	public javax.swing.JButton getExcluir() 
	{
		return Excluir;
	}

	public javax.swing.JButton getInformacoes() 
	{
		return Informacoes;
	}
	
	public void selecionarAPrimeiraLinhaDaTabela()
	{
		this.tabela.setRowSelectionInterval(0, 0);
	}

	public void setTipoPessoa(String tipoPessoa) {
		this.tipoPessoa = tipoPessoa;
	}
}
